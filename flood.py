import requests
import string
import os
import pathlib
from pathlib import Path
import random


chars = string.ascii_letters + string.digits + "!@#$%^"
random.seed = (os.urandom(1024))

# os.urandom() has better random generation than random()
# os.urandom(1024) is used to generate a string with the size of 1024bytes 
# seed function is used to generate same random numbers again and again and simplifies algorithm testing process


url="insert url here"
email_adress=[""]

p = Path(__file__).with_name('mails.txt')
with p.open('r') as f:
    for i in f:
        email_adress.append(i)
'''

mails.txt has random generate email adresses 
https://fauxid.com/tools/fake-email-list was used to generate 100 fake adresses

of course, these adresses can be generated by also joining random names
with random digits and random @gmail.com/@yahoo.com/@etc.com

'''


for email in email_adress:
    
    username = email
    password = "".join(random.choice(chars)for i in range(0,9))    

    requests.post(url, allow_redirects=False, data = {'auid2yjauysd2uasdasdasd': username,
		                                              'kjauysd6sAJSDhyui2yasd': password
    
                                                       })
    
    #requests.post sends a POST request to the specified url                                                  
    #allow_redirects = False to prevent the page redirecting
    #data = the Form Data from the page
    #to get data: More tools->Developer Tools->Network->Fetch/XHR->Headers->Form Data
    #data dictionary can also include names,comments,etc, if the url requires so (see Form Data)                                                     
    
    print(f"Sending \n email: {username} password: {password}")
    #print is not necessary,just to see what is being sent to the url                                                   
    



